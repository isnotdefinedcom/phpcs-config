<?xml version="1.0"?>
<ruleset name="Redaxmedia">
	<description>Yet another PHP coding standard</description>

	<!-- inherit from generic -->

	<rule ref="Generic.Arrays.DisallowLongArraySyntax.Found" />
	<rule ref="Generic.CodeAnalysis.EmptyStatement" />
	<rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall" />
	<rule ref="Generic.CodeAnalysis.JumbledIncrementer" />
	<rule ref="Generic.CodeAnalysis.UnconditionalIfStatement" />
	<rule ref="Generic.CodeAnalysis.UselessOverridingMethod" />
	<rule ref="Generic.ControlStructures.InlineControlStructure" />
	<rule ref="Generic.Formatting.DisallowMultipleStatements" />
	<rule ref="Generic.Files.ByteOrderMark" />
	<rule ref="Generic.Files.LineEndings" />
	<rule ref="Generic.Functions.FunctionCallArgumentSpacing" />
	<rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/>
	<rule ref="Generic.NamingConventions.ConstructorName" />
	<rule ref="Generic.NamingConventions.UpperCaseConstantName" />
	<rule ref="Generic.PHP.DeprecatedFunctions" />
	<rule ref="Generic.PHP.DisallowShortOpenTag" />
	<rule ref="Generic.PHP.ForbiddenFunctions" />
	<rule ref="Generic.PHP.LowerCaseConstant" />
	<rule ref="Generic.PHP.NoSilencedErrors" />
	<rule ref="Generic.Strings.UnnecessaryStringConcat" />
	<rule ref="Generic.WhiteSpace.ScopeIndent">
		<properties>
			<property name="indent" value="1" />
			<property name="tabIndent" value="true" />
		</properties>
	</rule>

	<!-- inherit from slevomat -->

	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Classes/ClassConstantVisibilitySniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Classes/ModernClassNameReferenceSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Classes/RequireConstructorPropertyPromotionSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures/RequireNullCoalesceOperatorSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures/RequireNullCoalesceEqualOperatorSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/ControlStructures/RequireShortTernaryOperatorSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Functions/UnusedParameterSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Functions/UselessParameterDefaultValueSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Namespaces/AlphabeticallySortedUsesSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Namespaces/ReferenceUsedNamesOnlySniff.php">
		<properties>
			<property name="allowFallbackGlobalFunctions" value="false"></property>
		</properties>
	</rule>
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Namespaces/RequireOneNamespaceInFileSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Namespaces/UnusedUsesSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Namespaces/UseDoesNotStartWithBackslashSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Namespaces/UseFromSameNamespaceSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/PHP/TypeCastSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/PHP/UselessParenthesesSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/PHP/UselessSemicolonSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/ParameterTypeHintSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/PropertyTypeHintSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/ReturnTypeHintSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/ReturnTypeHintSpacingSniff.php">
		<properties>
			<property name="spacesCountBeforeColon" value="1" />
			<property name="spacesCountAfterColon" value="1" />
		</properties>
	</rule>
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/TypeHints/UnionTypeHintFormatSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Variables/DuplicateAssignmentToVariableSniff.php" />
	<rule ref="vendor/slevomat/coding-standard/SlevomatCodingStandard/Sniffs/Variables/UnusedVariableSniff.php">
		<properties>
			<property name="ignoreUnusedValuesWhenOnlyKeysAreUsedInForeach" value="true" />
		</properties>
	</rule>

	<!-- inherit from psr1 -->

	<rule ref="PSR1.Classes.ClassDeclaration" />
	<rule ref="PSR1.Methods.CamelCapsMethodName" />

	<!-- inherit from psr2 -->

	<rule ref="PSR2.ControlStructures.ControlStructureSpacing" />
	<rule ref="PSR2.Namespaces.NamespaceDeclaration" />
	<rule ref="PSR2.Namespaces.UseDeclaration" />

	<!-- inherit from squiz -->

	<rule ref="Squiz.Arrays.ArrayBracketSpacing" />
	<rule ref="Squiz.PHP.Eval" />
	<rule ref="Squiz.PHP.DiscouragedFunctions" />
	<rule ref="Squiz.PHP.GlobalKeyword" />
	<rule ref="Squiz.PHP.NonExecutableCode" />
	<rule ref="Squiz.Scope.MemberVarScope" />
	<rule ref="Squiz.Scope.MethodScope" />
	<rule ref="Squiz.Strings.DoubleQuoteUsage" />
	<rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing" />
	<rule ref="Squiz.WhiteSpace.SemicolonSpacing" />
	<rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />

	<!-- inherit from zend -->

	<rule ref="Zend.Files.ClosingTag" />
</ruleset>
